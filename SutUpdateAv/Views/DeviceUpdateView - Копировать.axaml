<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="using:SutUpdateAv.ViewModels"
        xmlns:int="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:b ="clr-namespace:Avalonia.Xaml.Behaviors.DataTriggerBehavior; assembly=Avalonia.Xaml.Behaviors"   
        xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="SutUpdateAv.DeviceUpdateView"
        xmlns:mdls="using:SutUpdateAv.Models"
        x:DataType="vm:DeviceUpdateViewViewModel"
    
        Title="DeviceUpdateView"
        Name="WndDeviceUpdateView">

  <Design.DataContext>
    <vm:DeviceUpdateViewViewModel/>
  </Design.DataContext>

  <!---->
  <!--<Window.Styles>
    <Style Selector="DataGridCell.statusColumn">
      <Setter Property="FontSize" Value="24"/>
      <Setter Property="(int:Interaction.Behaviors)">
        <int:BehaviorCollectionTemplate>
          <int:BehaviorCollection>
            <ia:DataTriggerBehavior Binding="{Binding Status}" ComparisonCondition="Equal" Value="Rejected">
              <ia:ChangePropertyAction TargetObject="DataGridCell" PropertyName="Background" Value="Yellow" />
            </ia:DataTriggerBehavior>
          </int:BehaviorCollection>
        </int:BehaviorCollectionTemplate>
      </Setter>
    </Style>
  </Window.Styles>-->

  <Grid>
    <Menu Margin="0,0,0,0" Grid.Row="0" Grid.ColumnSpan="5" VerticalAlignment="Top">
      <MenuItem Header="Файл">
        <MenuItem Header="Закрыть"  Name="ExitMenuItem" Click="MenuItem_Click"></MenuItem>
      </MenuItem>
    </Menu>
 
    
  <!--<int:BehaviorCollectionTemplate>
    <int:BehaviorCollection>
      <ia:DataTriggerBehavior Binding="{Binding Status}" ComparisonCondition="Equal" Value="Rejected">
        <ia:ChangePropertyAction TargetObject="DataGridCell" PropertyName="Background" Value="Yellow" />
      </ia:DataTriggerBehavior>
    </int:BehaviorCollection>
  </int:BehaviorCollectionTemplate>-->
    
    
    <!--    x:DataType="mdls:DeviceUpdateItem"-->
    <!--SelectedItem="{Binding Path=IsSelected, Mode=TwoWay}"-->
    <!--<Label Content="{Binding ElementName=UI,Path=SelectedEmployee.Name}" Height="28" HorizontalAlignment="Left" Name="label1" VerticalAlignment="Top" Width="288" />-->

    <!--<ia:EventTriggerBehavior EventName="SelectionChanged">
      <InvokeCommandAction Command="{Binding CollectionSelectionChangedCommand}"   CommandParameter="{Binding Path=SelectedItems, 
                  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" PassEventArgsToCommand="True" />
    </ia:EventTriggerBehavior>-->

    <DataGrid Name="dtGridDeviceUpdateItems" HorizontalAlignment="Stretch" 
              VerticalAlignment="Stretch" 
              Grid.Row="2" 
              AutoGenerateColumns="False" 
              IsReadOnly="True"
              ItemsSource="{Binding DeviceUpdateItems}">

        <!--<int:Interaction.Behaviors>
            <ia:EventTriggerBehavior EventName="SelectionChanged">
              <InvokeCommandAction Command="{Binding CollectionSelectionChangedCommand}"  
                                   CommandParameter="{Binding ElementName=dtGridDeviceUpdateItems}" >
                <InvokeCommandAction.CommandParameter>
                
                </InvokeCommandAction.CommandParameter>
                </InvokeCommandAction>
            </ia:EventTriggerBehavior>

        </int:Interaction.Behaviors>-->

      <!--<Interaction.Behaviors>
        <EventTriggerBehavior EventName="SelectionChanged">
          <InvokeCommandAction Command="{Binding CollectionSelectionChangedCommand}" PassEventArgsToCommand="True" />
        </EventTriggerBehavior>
      </Interaction.Behaviors>-->

      <!--<int:BehaviorCollectionTemplate>
        <int:BehaviorCollection>
          <EventTriggerBehavior EventName="SelectionChanged">
            <InvokeCommandAction Command="{Binding CollectionSelectionChangedCommand}" PassEventArgsToCommand="True" />
          </EventTriggerBehavior>
        </int:BehaviorCollection>
      </int:BehaviorCollectionTemplate>-->

       
      <!--<DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Pink"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>-->

      <!--Click="cntxMenuItem_Click"-->
      <!--Command="{Binding $parent[Window].DeleteSelectedCommand}"-->

      <!--<Style TargetType="{x:Type MenuItem}" >
        <Setter Property="CommandParameter"
          Value="{Binding Path=SelectedItems, 
                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
      </Style>-->

      <!--CommandParameter="{Binding Path=SelectedItems,
      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}" >-->

      <!--<Style Selector="MenuItem">
                <Setter Property="CommandParameter"
                     Value="{Binding Path=SelectedItems, 
                  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                </Style>-->

      <!--CommandParameter="{Binding Path=SelectedItems}"-->

      <DataGrid.ContextMenu>
        <ContextMenu Name="gridCntxMenu" >
          <MenuItem Name="delSelectedMenu" Header="Удалить выбранные"  IsEnabled="True" Command="{Binding DeleteSelectedCommand}" 
                    CommandParameter="{Binding ElementName=dtGridDeviceUpdateItems}" >
          </MenuItem>
        </ContextMenu>
      </DataGrid.ContextMenu>
      <DataGrid.Columns>
        <DataGridTextColumn  Binding="{Binding Path=VestName}" Header="Вестибюль"/>
        <DataGridTextColumn  Binding="{Binding Path=TurNum}" Width="70" Header="Номер турникета"/>
        <DataGridTextColumn  Binding="{Binding Path=Status}"   Header="Статус"/>
        <DataGridTextColumn 
                            Binding="{Binding Path=CreateDateTime, StringFormat= \{0:dd.MM.yy HH:mm:ss\}}"  Header="Дата назначения"/>
        <DataGridTextColumn  Binding="{Binding Path=SatusDateTime, StringFormat= \{0:dd.MM.yy HH:mm:ss\}}" Header="Дата статуса"/>
        <DataGridTextColumn Binding="{Binding Path=FromDateTime, 
                    StringFormat= \{0:dd.MM.yy HH:mm:ss\}}" Header="Дата и время доступности обновления" Width="110"/>
        <DataGridTextColumn  Binding="{Binding Path=PoCodeName}" Header="Код ПО"  Width="50"/>
        <DataGridTextColumn  Binding="{Binding Path=HexSn}" Width="70" Header="Серийный номер"/>
        <DataGridTextColumn  Binding="{Binding Path=DevId}" Width="72" Header="Код устройства"/>
        <DataGridTemplateColumn   Header="Удалить" >
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
                <!--Click="btnDel_Click"-->
              <!--x:Bind Path=viewmodels:OptionsViewModel.Command_TapColorSet-->
              <!--x:DataType="vm:DeviceUpdateViewViewModel"-->
              <!--Command="{Binding Path=DeleteSelectedCommand}"-->

              <Button x:Name="btnDelUpdt" Content="Удалить"  HorizontalAlignment="Center"   
                       CommandParameter="{Binding}"
                             IsVisible="{Binding IsDel, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
      </DataGrid.Columns>
    </DataGrid>
    <Label x:Name="lblNameUpdt" Content="Обновление: " HorizontalAlignment="Left" Margin="6,10,0,0" VerticalAlignment="Top" Width="353" Grid.Row="1"/>
    <Label x:Name="lblCodeUpdt" Content="Номер обновления: " HorizontalAlignment="Left" Margin="400,10,0,0" VerticalAlignment="Top" Width="154" Grid.Row="1"/>
    <Button Content="Перечитать" Name="btnRefresh" HorizontalAlignment="Left" Click="btnRefresh_Click"
            Margin="640,10,0,0" Grid.Row="1" VerticalAlignment="Top" RenderTransformOrigin="0.493,0.067" Width="95"/>

    <Grid.RowDefinitions>
      <RowDefinition Height="25"/>
      <RowDefinition Height="50"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
  </Grid>
  
  
  

</Window>
